<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yupi.springbootinit.mapper.ChartMapper">

    <resultMap id="BaseResultMap" type="com.yupi.springbootinit.model.entity.Chart">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="goal" column="goal" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="chartData" column="chartData" jdbcType="VARCHAR"/>
            <result property="chartType" column="chartType" jdbcType="VARCHAR"/>
            <result property="genChart" column="genChart" jdbcType="VARCHAR"/>
            <result property="genResult" column="genResult" jdbcType="VARCHAR"/>
            <result property="userId" column="userId" jdbcType="BIGINT"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="status" column="status" jdbcType="VARCHAR"/>
            <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,goal,'name',chartData,
        chartType,genChart,genResult,
        createTime,updateTime,isDelete,userId,status
    </sql>



<!--    <select id="getChartDataByUserId" resultType="Map">-->
<!--        SELECT *-->
<!--        FROM-->
<!--            (SELECT CONCAT('chart_', #{userId}, '_data', COALESCE(-->
<!--                    (SELECT MAX(CAST(SUBSTRING_INDEX(table_name, '_', -1) AS UNSIGNED))-->
<!--                     FROM information_schema.tables-->
<!--                     WHERE table_name LIKE CONCAT('chart_', #{userId}, '_data%')-->
<!--                    ), 1)) AS table_name) as t-->
<!--    </select>-->



    <sql id="sanitizeColumnName">
    <![CDATA[
        REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
        #columnName#, '[^a-zA-Z0-9_]', ''),
        '^\\d+', ''),
        '\\s+', '_'),
        '^[^a-zA-Z_]', ''),
        'col_', UNIX_TIMESTAMP())
        ]]>
  </sql>



<!--    &lt;!&ndash; 获取现有表名 &ndash;&gt;-->
<!--    <select id="getExistingTableNames" parameterType="long" resultType="string">-->
<!--        SELECT table_name-->
<!--        FROM information_schema.tables-->
<!--        WHERE table_schema = DATABASE()-->
<!--          AND table_name LIKE CONCAT('chart_', #{userId}, '_data%')-->
<!--    </select>-->

<!--    &lt;!&ndash; 获取表的行数 &ndash;&gt;-->
<!--    <select id="getTableRowCount" resultType="int">-->
<!--        SELECT COUNT(*)-->
<!--        FROM ${tableName}-->
<!--    </select>-->

<!--    &lt;!&ndash; 统计每列的非空数据数量 &ndash;&gt;-->
<!--    <select id="countNonNullValues" parameterType="map" resultType="int">-->
<!--        SELECT COUNT(${columnName}) FROM ${tableName}-->
<!--    </select>-->

    <!-- 获取用户的最后一个图表ID -->
    <select id="getLastChartIdByUserId" resultType="java.lang.Integer">
        SELECT MAX(CAST(REGEXP_REPLACE(SUBSTRING_INDEX(table_name, '_', -1), '^data', '') AS UNSIGNED)) AS max_id
        FROM information_schema.tables
        WHERE table_name LIKE CONCAT('chart_', #{userId}, '_data%')
    </select>

    <!-- 创建表 -->
    <update id="createTable">
        CREATE TABLE ${tableName} (
        <foreach collection="columns" item="column" separator=",">
            ${column}
        </foreach>
        )
    </update>

    <!-- 插入数据 -->
    <insert id="insertData">
        INSERT INTO ${tableName}
        (<foreach collection="columns" item="column" separator=",">${column}</foreach>)
        VALUES
        <foreach collection="values" item="row" separator=",">
            (<foreach collection="row" item="value" separator=",">#{value}</foreach>)
        </foreach>
    </insert>


</mapper>
